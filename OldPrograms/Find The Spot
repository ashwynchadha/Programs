//CLASSES - ADVANCED
#include<iostream.h>
#include<string.h>
#include<stdio.h>
#include<conio.h>
#include<process.h>


int flagzeus=0;
int flagWARP=0;

class coordinates
{
	private:
	int x,y;
	public:
	coordinates()
	{
	x=0;
	y=0;
	}
	void NSEW();
	void SHOW();
	void CHECK();
	void boss();

};

	void coordinates::NSEW()
	{
		cout<<"Enter direction:\n";
		char a;
		a=getch();
		switch(a)
			{
				case'w':
				case'W':
				y++;
				break;
				case'a':
				case'A':
				x--;
				break;
				case'd':
				case'D':
				x++;
				break;
				case's':
				case'S':
				y--;
				break;
				case'0':
				boss();
				default:
				cout<<"Wrong character. Try again.\n";
			}
	}

		 void rules()
	 {//              GAME RULES

	cout<<"The name of the game is treasure hunt.\n"
	" This is a text based game that runs on the\nworld's most powerful graphics chip :-IMAGINATION\n\n"
	" There are seven rules in this game.\n"
	"  1. You are on the origin (0,0) of a cartesian plane.\n"
	"  2. You must press an alphabet key to move\n in the corresponding direction (w/a/s/d).\n"
	"  3. After every move, the computer will give you your coordinates.\n"
	"  4. There is a treasure hidden on one of the coordinates in\none of the four quadrants.\n"
	"  5. If you are less than 5 moves away from the treasure in any direction\n(In a straight line),"
	"the computer will display a line telling you so.\n"
	"  6. Press ENTER to exit your game\n"
	"  7. Sometimes, there will be obstacles in your way. The only way\n to get past them is to either go around them or enter a secret word.\n"
	" The secret word needs to be deduced from the hints given.\n"
	" \n\nPress the number 5 at any point in the game to clear the screen\n"
	"                         Good luck finding the treasure!\n\n";

	}



	void main()
		{
			clrscr();
			rules();
			cout<<"\n\nPress any key to continue.\n";
			getch();
			clrscr();
			coordinates C;
			int b=0;
			while(b==0)
			{
				clrscr();
				C.SHOW();
				C.NSEW();
				C.CHECK();
			}
		}

	 void coordinates::SHOW()
	 {
	 cout<<"Your current location is: ("<<x<<','<<y<<")\n";
	 }

		 int zeus()
	 {
	 clrscr();
		cout<<"The ground in front of you opens into a 15 metre wide fissure.\n"
		"A voice booms from above, only he who deems himself worthy by taking\n"
		"the name of the greek god that created this fissure shall pass.\n"
		"the only knowledge he possesses may be that I am the god of the skies\n"
		"and the Greek counterpart of the Roman god jupiter.\n";

		cout<<"\n\n\nTo pass, you must name the god.\n";
		cout<<"Press 0 to get warped back to (8,8), or any other number key to proceed.\n";
		int y;
		cin>>y;

		if(y!=0)
		{
		cout<<"Enter name of god.\n";
		char god[4];
		cin>>god;

		if(strcmpi(god,"zeus")==0)
		return 1;
		else
		return 2;
		}

		else
		{
		return 0;
		}
	 }

	 int warp()
	 {
	 
	 }

	 void coordinates::CHECK()
	 {
	 if(x==10 && y==10)
	 {cout<<"Congratulations! TREASURE FOUND!"; exit(0);}


	 if((y==4 && flagWARP==0) || (y==-4 && flagWARP==0))
	 {
			flagWARP=1;
			int g=warp();
	 }


	 if(y==9 && x>0 && x<16 && flagzeus==0)
	 {
			flagzeus=1;
			int g=zeus();
			if(g==0)
			{
			x=8,y=8;
			flagzeus=0;
			}
			else if(g==1)
			cout<<"You may proceed.\n";
			else
			{
			cout<<"YOU LOSE.\n";
			exit(0);
			}
	 }
	 }



	 void coordinates::boss()
	 {
		clrscr();
		cout<<"Enter password\n";
		char pass[20];
		gets(pass);
		int x=(strcmpi(pass,"fibonacci01123581321"));
		if(x==0)
		{
			cout<<"Leader code: QTpi processing...";
			cout<<"\nEnter coordinates.\n";
			cin>>x>>y;
		}
		else
		{
			cout<<"CHEATER! YOU LOSE!";
			exit(0);
		}
	 }


