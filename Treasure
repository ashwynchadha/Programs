#include<process.h>
#include<iostream.h>
#include<conio.h>
#include<string.h>
#include<stdio.h>
void main ()
{

	//              GAME RULES

	cout<<"The name of the game is treasure hunt.\n"
	" This is a text based game that runs on the\nworld's most powerful graphics chip :-IMAGINATION\n\n"
	" There are seven rules in this game.\n"
	"  1. You are on the origin (0,0) of a cartesian plane.\n"
	"  2. You must press an alphabet key to move\n in the corresponding direction (w/a/s/d).\n"
	"  3. After every move, the computer will give you your coordinates.\n"
	"  4. There is a treasure hidden on one of the coordinates in\none of the four quadrants.\n"
	"  5. If you are less than 5 moves away from the tresure in any direction\n(In a straight line),"
	"the computer will display a line telling you so.\n"
	"  6. Press ENTER to exit your game\n"
	"  7. Sometimes, there will be obstacles in your way. The only way\n to get past them is to either go around them or enter a secret word.\n"
	" The secret word needs to be deduced from the hints given.\n"
	" \n\nPress the number 5 at any point in the game to clear the screen\n"
	"                         Good luck finding the treasure!\n\n";

	cout<<"\nPress any key to start";
	char kljzsg=getch();


	restart:

	//                          INITIAL DIRECTIONAL CODE

	char dir='a';
	int x=0, y=0;
	while (dir!= '\r')
	{

	cout<<"\n\nYour location is = ("<<x<<","<<y<<")"<<"\n\n";
	cout<<"Enter a direction (n/s/e/w)\n";
	dir = getch();
	switch(dir)
	{
	case 'n':
	y++;
	break;
	case 's':
	y--;
	break;
	case 'e':
	x++;
	break;
	case 'w':
	x--;
	break;
	case '5':
	clrscr();
	break;
	default:
	cout<<"\nWrong character: Try again\n";
	continue;
	case '0':

	//                 DEVELOPER PRIVELEGES






	cout<<"Enter password\n";
	char password[21];
	cin>>password;
	if(strcmp(password,"fibonacci01123581321")==0)
	{
	clrscr();
	cout<<"Hey boss!!\n";
	cout<<"Enter required coordinates\n";
	cin>>x;
	cin>>y;
	}
	else
	{
	cout<<"WRONG PASSWORD, YOU CHEATER\n";
	cout<<"GAME OVER\n";
	exit(0);
	}


	}






		//                  LIMITING THE PROGRAM TO 30



	if (x==30 || x==-30 || y==30 || y==-30)
	cout<<"You can go farther if you want, but I can\nassure you that you will not find the treasure";








	//              CHALLENGE 1: BLOODTHIRSTY VAMPIRE



	if (x<=4 && x>=2 && y==4)
	{
	cout<<"A bloodthirsty vampire blocks your way!!\n"
	"To proceed you must give the keyword-\n(HINT: The keyword is the first letter\nin the name of the greek god\nconsidered the lord of the sky\n";
	cout<<"\n ENTER THE KEYWORD\n";
	char f='z';
	f = getche();
	if (f=='z')
	cout<<"\nThe vampire was defeated! You may now pass\n\n";
	else
	{
	cout<<"\nOH NO!! The vampire ate you!!\n\nGAME OVER";
	exit (0);
	}
	}


	//                      CHALLENGE 2: FOURWAYS DUNGEON




	if (x==9 && y==8)
	{
	cout<<"You entered a dungeon and have four ways in front of you.\nWhich will you take?\nIf you choose the right way, you may proceed.\n If you choose any of the other ways, you will be redirected\n to coordinates (0,0)\n";
	cout<<"Choose a way (1/2/3/4)\n";
	char fourways = 2;
	fourways = getche();
	if (fourways=='2')
	{
	cout<<"You may proceed";
	x=9;
	y=9;
	}
	else
	{
	cout<<"Wrong way";
	x=0;
	y=0;
	}
	}








	//                 Challenge 3 - ZONBIE IN YOUR WAY



	if (x<=-3 && x>=-8 && y==-4)
	{
	cout<<"A slime-covered, undead ZOMBIE bursts out from the\nground beneath you"
	"To proceed you must EVADE the zombie by using one of\nthese 3 objects :- (Axe/Grease/Pepper Spray)\n";
	cout<<"\n Enter the FIRST letter of the object you would use.\n";
	char zombie ='a';
	zombie = getche();
	switch (zombie)
	{
	case 'a':
	cout<<"\nYou can't kill something that's already dead!\n";
	cout<<"The ZOMBIE buried you in his own grave, alive!!\n\nGAME OVER";
	exit (0);
	case 'g':
	cout<<"The zombie slipped and fell, but caught your feet\nand warped you back to the origin.";
	x=0;
	y=0;
	break;
	case 'p':
	cout<<"Bam! You pepper sprayed the zombie and ran away\nwhile it was wiping it's eyes. You may now pass\n(You are warned to go 1 step south or north immediately\nto avoid any more zombies) ";
	cout<<"\nAlso, you should know that the zombies are present from -3 to -8.\on the x axis if your y coordinate is -4.\nYou would do well to avoid them.\n";
	break;
	default:
	cout<<"Wrong character, try again\n";
	continue;
	}
	}










	//             CHALLENGE 4 - WARP CHOICE



	if (x==-5 && y==10 || x==5 && y==-10 || x==-5 && y==-10 || x==-23 && y==-20 ||x==-25 && y==20 || x==-5 && y==5)
	{
	cout<<"Answer this riddle:\nWhat comes once is a minute, twice in a moment and\never in a hundreed years?\n";
	char riddle1 = 'd';
	riddle1 = getche();
	if (riddle1=='m')
	{
	cout<<"As soon as you entered correctly, 3 warpholes materialised in\nfront of you."
	"The tag on the holes says:"
	"Only one out of these three warp holes is actually there, while\nthe rest are holograms.\n"
	"You may choose one of the holes (1/2/3)\n";
	"If you choose the correct hole, you will be transported to within\n six moves of the treasure."
	"If you choose incorrectly, one of the holes may transport you back to (0,0)\n,while the other will leave you unsscathed, and you may move normally.\n";
	cout<<"\n\nChoose a hole (1,2,3):\n";
	char hole = 'e';
	hole = getche();
	switch(hole)
	{
	case '1':
	x=6;
	y=4;
	break;
	case '2':
	x=0;
	y=0;
	break;
	case '3':
	cout<<"Your position remained unchanged\n\n";
	break;
	default:
	cout<<"Wrong character, try again\n";
	continue;
	}
	}
	else
	{
	cout<<"Wrong answer\n\n";
	}
	}






	//               CHALLENGE 5 - QUICKSAND

	if (y==15 && x>=2 && x<=9 || y==15 && x>=-8 && x<=-3 || y==-14 && x>=2 && x<=9 || y==-16 && x>=-8 && x<=-3)
	{
	char quicksand = 'f';
	cout<<"There is a pool of quicksand in front of you.\nYou cannot cross it, and will have to go around it.\n";
	y--;
	quicksand = getche();
	switch(quicksand)
	{
	case 'n':
	cout<<"OOPS! You stepped into the quicksand and drowned.\nGAME OVER";
	exit(0);
	default:
	if (quicksand=='e')
	x++;
	if (quicksand=='w')
	x--;
	if (quicksand=='s')
	y--;
	}
	}








	//




	//                  HOT OR COLD??



	if (x-5==10 || x+5==10 || y-5==10 || y+5==10)
	cout<<"You are/were close to your destination\n\n";










	//                  YOU WIN



	if (x==10 && y==10)
	{
	cout<<"Congratulations! You found the treasure!!\n\n";



	//                 PLAY AGAIN??



	cout<<"Play again?? (y/n)\n";
	char play = 'b';
	play = getche();
	switch(play)
	{
	case 'y':
	cout<<"\n\n\n\n\nYou know the rules\n\n\n\n\n";
	goto restart;
	case 'n':
	exit(0);
	}
	}
	}


}

